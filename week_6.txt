resource url?
QUESTION ----------------
Given an array of numbers, find the index of the smallest array element
(the pivot), for which the sums of all elements to the left and to the right
are equal. The array may not be reordered.
Example
arr=[1,2,3,4,6]
·        
the sum of the first three elements, 1+2+3=6. The value of the last
element is 6.
·        
Using zero based indexing, arr[3]=4 is the pivot between the two
subarrays.
·        
The index of the pivot is 3.
Constraints
·        
3 ≤ n ≤ 105
·        
1 ≤ arr[i] ≤ 2 × 104, where 0 ≤ i < n
·        
It is guaranteed that a solution always exists.
The first line contains an integer n, the size of the array arr.
Each of the next n lines contains an integer, arr[i], where 0 ≤ i < n.
Sample Case 0
Sample Input 0
4
1
2
3
3
Sample Output 0
2
 
Explanation 0
·        
The sum of the first two elements, 1+2=3. The value of the last element
is 3.
·        
Using zero based indexing, arr[2]=3 is the pivot between the two
subarrays.
·        
The index of the pivot is 2.
 
Sample Case 1
Sample Input 1
3
1
2
1
Sample Output 1
1
Explanation 1
·        
The first and last elements are equal to 1.
·        
Using zero based indexing, arr[1]=2 is the pivot between the two
subarrays.
·        
The index of the pivot is 1.
------------------ANSWER
def find_pivot_index(arr):
    
    left_sum = 0
    total_sum = sum(arr)
    
    
    for i, num in enumerate(arr):
        
        total_sum -= num
        
       
        if left_sum == total_sum:
            return i
        
       
        left_sum += num
    
   
    return -1


n = int(input())
arr = []
for _ in range(n):
    arr.append(int(input()))

pivot_index = find_pivot_index(arr)
print( pivot_index)
------------------------------
QUESTION ----------------
Write a program to print all the locations at
which a particular element (taken as input) is found in a list and also print
the total number of times it occurs in the list. The location starts from 1.
------------------ANSWER
x=int(input())
l=[]
c=0
for i in range(x):
    l.append(int(input()))
y=int(input())
for i in range(len(l)):
    if l[i]==y:
        print(y,' is present at location ',i+1,'.',sep='')
        c+=1
if c==0:
    print(y,'is not present in the array.')
else:
    print(y,'is present',c,'times in the array.')
------------------------------
QUESTION ----------------
Complete the program to count frequency of each
element of an array. Frequency of a particular element will be printed once.
------------------ANSWER
n=int(input())
l1=[]
for i in range(n):
    s=int(input())
    l1.append(s)
l2=[]
for i in l1:
    if i not in l2:
        l2.append(i)
for i in l2:
    print(i,'occurs',l1.count(i),'times')
------------------------------
QUESTION ----------------
Output is a
merged array without duplicates.
------------------ANSWER
n1=int(input())
l1=[]
for i in range(n1):
    s=int(input())
    l1.append(s)
n2=int(input())
l2=[]
for i in range(n2):
    s=int(input())
    l2.append(s)
l3=l1+l2
l4=[]
for i in l3:
    if i not in l4:
        l4.append(i)
l4.sort()
for i in l4:
    print(i,end=' ')
------------------------------
QUESTION ----------------
Write a Python program to check if a given list is strictly increasing or not. Moreover, If removing only one element from the list results in a strictly increasing list, we still consider the list true
------------------ANSWER
n = int(input())
lst = []
for _ in range(n):
    lst.append(int(input()))

# Function to check if a list is strictly increasing
def is_strictly_increasing(lst):
    for i in range(1, len(lst)):
        if lst[i] <= lst[i - 1]:
            return False
    return True

# Function to check if a list is strictly decreasing
def is_strictly_decreasing(lst):
    for i in range(1, len(lst)):
        if lst[i] >= lst[i - 1]:
            return False
    return True

# Check if the list is strictly increasing or strictly decreasing
if is_strictly_increasing(lst) or is_strictly_decreasing(lst):
    print("True")
else:
    # Check if removing only one element from the list results in a strictly increasing list
    for i in range(len(lst)):
        temp_lst = lst[:i] + lst[i+1:]
        if is_strictly_increasing(temp_lst):
            print("True")
            break
    else:
        print("False")
------------------------------
QUESTION ----------------
Write a Python program to Zip two given lists of lists.
------------------ANSWER
def zip_lists(list1, list2):
    # Zip the lists and concatenate the elements using list comprehension
    zipped_list = [x + y for x, y in zip(list1, list2)]
    return zipped_list

def main():
    m = int(input())
    n = int(input())

    list1 = []
    list2 = []

   
    for _ in range(m):
        row = [int(input()) for _ in range(n)]
        list1.append(row)

   
    for _ in range(m):
        row = [int(input()) for _ in range(n)]
        list2.append(row)

    zipped_list = zip_lists(list1, list2)
    print(zipped_list)

if __name__ == "__main__":
    main()
------------------------------
QUESTION ----------------
Program to print all the distinct elements in an array. Distinct
elements are nothing but the unique (non-duplicate) elements present in the
given array.
------------------ANSWER
n=int(input())
s=[]
for i in range (n):
    b=int(input())
    if(b not in s):
        s.append(b)
        print(b,end=" ")
------------------------------
QUESTION ----------------
Determine the factors of a number (i.e., all
positive integer values that evenly divide into a number) and then return the pth
element of the list, sorted ascending. If there is no pth element,
return 0.
------------------ANSWER
n=int(input())
p=int(input())
l=[]
for i in range(1,n+1):
    if(n%i==0):
       l.append(i);  
m=len(l)
for j in range(0,m):
    if(j==p-1):
        print(l[j])
        break
else:
        print(0)
------------------------------
QUESTION ----------------
Consider a program to insert an element / item
in the sorted array. Complete the logic by filling up required code in editable
section. Consider an array of size 10. The eleventh item is the data is to be
inserted.
------------------ANSWER
l=[]
for i in range(10):
    l.append(int(input()))
e=int(input())
for i in range(len(l)):
    if l[i]>e:
        l.insert(i,e)
        break
print('ITEM to be inserted:',e,sep='')
print('After insertion array is:')
for i in l:
    print(i)
------------------------------
QUESTION ----------------
Given an array A of sorted integers and another non negative
integer k, find if there exists 2 indices i and j such that A[i] - A[j] = k, i
!= j.
------------------ANSWER
t = int(input())
l = []
for i in range(t):
    p = 0
    n = int(input())
    for j in range(n):
        l.append(int(input()))
    dif = int(input())
    for j in l:
        for k in l:
            if (j - k == dif) or (k - j == dif):
               if p == 0:
                   print("1")
                   p = 1
    if p == 0:
        print("0")
------------------------------
